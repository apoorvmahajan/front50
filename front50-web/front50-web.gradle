/*
 * Copyright 2014 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'io.spinnaker.package'

ext {
  springConfigLocation = System.getProperty('spring.config.additional-location', "${System.getProperty('user.home')}/.spinnaker/".toString())
}

run {
  systemProperty('spring.config.additional-location', project.springConfigLocation)
}
mainClassName = 'com.netflix.spinnaker.front50.Main'

configurations.all {
  exclude group: 'org.slf4j', module: 'slf4j-log4j12'
}

dependencies {
  implementation project(":front50-core")
  implementation project(":front50-migrations")
  implementation "org.springframework.boot:spring-boot-starter-web"
  implementation "org.springframework.boot:spring-boot-starter-actuator"
  implementation "com.netflix.spinnaker.fiat:fiat-api:$fiatVersion"
  implementation "com.netflix.spinnaker.fiat:fiat-core:$fiatVersion"
  implementation "com.netflix.spinnaker.kork:kork-artifacts"
  implementation "com.netflix.spinnaker.kork:kork-web"
  implementation "com.netflix.spinnaker.kork:kork-exceptions"
  implementation "com.squareup.retrofit:converter-jackson"
  implementation "io.swagger:swagger-annotations"
  implementation "commons-codec:commons-codec"

  runtimeOnly "com.netflix.spinnaker.kork:kork-runtime"

  // To fix https://nvd.nist.gov/vuln/detail/CVE-2021-21350
  // Introduced by com.netflix.eureka:eureka-client via kork-eureka
  //
  // TODO: Move to kork
  // when we build kork ourselves, update in spinnaker-dependencies/spinnaker-dependencies.gradle. And remove completely when
  // https://github.com/Netflix/eureka releases a version that contains
  // https://github.com/Netflix/eureka/commit/50db5d24a7c45375c0b32fffa238256276e6432e, and kork uses it.

  // To fix https://nvd.nist.gov/vuln/detail/CVE-2019-17495
  // Introduced by io.springfox:springfox-swagger-ui via kork-bom and kork-swagger
  // TODO: Move to kork, update version

  // To fix https://github.com/cbeust/testng/issues/2150 (sonatype-2019-0115)
  // Introduced by org.testng used by org.codehaus.groovy:groovy-testng via kork-web
  // TODO: Move to kork by upgrading the version of groovy and spockframework
  constraints {
     runtimeOnly("com.thoughtworks.xstream:xstream:1.4.16")

     runtimeOnly("io.springfox:springfox-swagger-ui:2.10.0")

     implementation("org.codehaus.groovy:groovy-all:3.0.8")
     implementation("org.spockframework:spock-core:2.0-groovy-3.0")
  } // code-fix end

  testImplementation project(":front50-test")
  testImplementation project(":front50-s3")
  testImplementation project(":front50-sql")
  testImplementation "io.reactivex:rxjava"
  testImplementation "com.amazonaws:aws-java-sdk-s3"
  testImplementation "com.netflix.spinnaker.kork:kork-sql-test"
  testImplementation "org.testcontainers:mysql:1.15.1"

  // Add each included cloud provider project as a runtime dependency
  gradle.includedProviderProjects.each {
    runtimeOnly project(it)
  }
}

test {
  useJUnitPlatform()
  environment "AWS_ACCESS_KEY_ID", "null"
  environment "AWS_SECRET_KEY", "null"
}
